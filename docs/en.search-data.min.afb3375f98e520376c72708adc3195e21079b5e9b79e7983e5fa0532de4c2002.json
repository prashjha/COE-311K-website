[{"id":0,"href":"/COE-311K-website/docs/syllabus/","title":"Syllabus","section":"Docs","content":"Key information #           Instructor Prashant K. Jha   Email prashant.jha@austin.utexas.edu, pjha.sci@gmail.com   Title of course Engineering Computation   Course unique number 14610   Office hours Wednesday 6:00 - 7:30 pm, Thursday 6:00 - 7:30 pm   Lecture room ASE 1.126, map: 2617 Wichita St, Austin, TX 78712   Lecture time MWF 9:00 am - 10:00 am   Canvas webpage Section 1 (14610)   Github repository COE-311K    Syllabus pdf #  Download from this link\nTeaching assistants #  TA: Brad Marvin (brad_marvin@utexas.edu)\nOffice hours: TBA\nTextbook #  We will use the following book as a main reference\n Applied Numerical Methods with Matlab for Engineers \u0026amp; Scientists by Steven C. Chapra. 3rd Ed., McGraw-Hill, 2012\n  Note: 3rd and 4th editions are somewhat syllabus so you could also use 4th edition of the book, however, instructor and TA/LA will use 3rd edition is main reference.\n Assignment, exams, and grading policy #  These are discussed here\nTopics to be covered #     Topic number Topic Chapters in reference Number of lectures     1 Introduction to MATLAB 2, 3 4   2 Sources of Error in Computer Arithmetic and Algorithms 4 1   3 Roots and optimization 5, 6, 7 4   4 Linear system of equations 8, 9, 12 6   5 Eigenvalues and eigenvectors 13 3   6 Regression, curve fitting, least squares 14, 15 3   7 Polynomial Interpolation 17 3   8 Numerical integration 19, 20 3   9 Numerical differentiation 21 3   10 Numerical methods for differential equations 22, 24 4   11 Brief introduction to Artificial Neural Networks and their applications  3 - 4    Lecture plans and important dates #  See the details in this syllabus pdf file: syllabus pdf.\n"},{"id":1,"href":"/COE-311K-website/docs/assignments/assignment1/","title":"Assignment1","section":"Assignments","content":"Assignment 1 #  Numerical method for a coupled system of 1st order ODEs.\nLinks #   Problem: A1.pdf, (Latex files - A1.tex) Derivation of equations for rocket thrust: derivation Matlab scripts: run_rocket_problem.m, rocket_problem.m  "},{"id":2,"href":"/COE-311K-website/docs/lectures/lecture1/","title":"Lecture1","section":"Lectures","content":"General introduction #  In this first lecture, we will overview the syllabus and assignment, exams, and grading policies. We will also get to know the team including myself and the teaching assistants.\nLinks #   Presentation slides (without annotation) Presentation slides (with annotation)  "},{"id":3,"href":"/COE-311K-website/docs/projects/project1/","title":"Project1","section":"Projects","content":"Project 1 #   Numerical solution of 2nd order ODE using finite-difference discretization Learn how to compute norm of error and compare the error for different discretization lengths Improvement of one of the methods for solving $Ax = b$ taking into account the sparse structure of matrix  Links #   Problem: P1.pdf, (Latex files - P1.tex)  "},{"id":4,"href":"/COE-311K-website/docs/syllabus/grading/","title":"Grading","section":"Syllabus","content":"Grading #     Type Weight Remarks     Attendance, active participation, pop-quizzes 5%    Homeworks/assignments 30% Total 6 (we will count best 4 out of 6)   Projects 40% Total 2 (20% and 20%)   Final project 25%     Grading slabs\n   A A- B+ B B- C+ C C- D+ D D- F     90 \u0026lt; G ≤ 100 87 \u0026lt; G ≤ 90 84 \u0026lt; G ≤ 87 80 \u0026lt; G ≤ 84 77 \u0026lt; G ≤ 80 74 \u0026lt; G ≤ 77 70 \u0026lt; G ≤ 74 67 \u0026lt; G ≤ 70 64 \u0026lt; G ≤ 67 60 \u0026lt; G ≤ 64 55 \u0026lt; G ≤ 60 G ≤ 55     Note: We will follow university guidelines in enforcing regular attendance. Whether it is an online or in-person class, active participation from students is expected. The penalty could be higher for those students who show significantly less interest in the class activity. In addition, students disrupting the class or learning process of other students will be fined (in terms of total grade) heavily.\n Homework Policy #   There will be a total of 6 assignments; however, in the end, we will only consider the best 4 out of 6. Assignment will be due in a week from the day it is assigned. Up to 4 days of delay is allowed. However, each passing day you will lose 20% of the marks. It is possible to allow late submission. You need to explain the reason for the late submission, and only if the instructor has confirmed you can submit the assignment late. The instructor retains the right to decide on this matter. In case you are going through an emergency, do not worry about the late submission. You can submit the assignment once you are out of the crisis. Of course, late submission, in this case, will only be accepted if the reasons you have provided are valid. The instructor retains the right to decide on this matter. Assignments must be completed without any collaboration or help. There will be a penalty if we find signs of plagiarism. Codes developed to complete the assignments should also be independent, and graders will check if plagiarism or code is copied from online sources.  Examinations #  To encourage collaboration and exchange of knowledge, we will assign two projects. Some key points:\n Projects will be more challenging compared to the assignments. We will form a group of 5 students (group will be formed randomly), and each group will complete the project. The final report that you will submit has to be prepared individually (i.e., you will collaborate with your group members but will prepare reports separately). Unlike assignments, you will be given 2 weeks to complete each project.   Note: We will follow the rules described in the Homework Policy section above regarding the late submissions.\n Attendance #  Regular attendance is expected. Students are responsible for the information covered in class.\nSpecial notes #  The University of Texas at Austin provides upon request appropriate academic adjustments for qualified students with disabilities. For more information, contact the Office of the Dean of Students at 471-6259, 471-4641 TDD or the College of Engineering Director of Students with Disabilities at 471-4321.\nEvaluation #  Note that the Measurement and Evaluation Center forms for the Cockrell School of Engineering will be used during the last week of class to evaluate the course and the instructor. You may also want to note any other methods of evaluation you plan to employ.\n"},{"id":5,"href":"/COE-311K-website/docs/finals/","title":"Final Project","section":"Docs","content":" TBA\n "},{"id":6,"href":"/COE-311K-website/docs/assignments/assignment2/","title":"Assignment2","section":"Assignments","content":"Assignment 2 #  Application of roots and optimization methods on temperature distribution within a uniform metal bar.\nLinks #   Problem: A2.pdf, (Latex files - A2.tex) Derivation of an equation for temperature in a metal bar: derivation Hints: A2-hints.pdf, (Latex files - A2-hints.tex) Matlab scripts: symbolic.m, rocket_problem.m  "},{"id":7,"href":"/COE-311K-website/docs/lectures/lecture2/","title":"Lecture2","section":"Lectures","content":"Lecture 2 #  Introduction to computational modeling of physical events through conservation laws. We consider the example of freefall of object due to gravitational forces and motion of mass attached to a linear elastic spring.\nLinks #   Lecture notes  "},{"id":8,"href":"/COE-311K-website/docs/projects/project2/","title":"Project2","section":"Projects","content":"Project 2 #   Concept of constrained optimization problem with real-world application to computational oncology Learn how to solve coupled 1st order ODEs and choose correct time step Learn the concept of cost function and optimization problem to find values of certain parameters Learn how to use Matlab function fmincon  Links #   Problem: P2.pdf, (Latex files - P2.tex) Matlab scripts to get started: TumModel.m, CostFunction.m, SolveOptimization.m  "},{"id":9,"href":"/COE-311K-website/docs/assignments/assignment3/","title":"Assignment3","section":"Assignments","content":"Assignment 3 #  Exercise on Eigenvalue-Eigenvector problem. We consider two applications: spring-mass system with three mass and 6 springs (three 2nd order ODEs) and mixing of two constituents (two 1st order ODEs).\nLinks #   Problem: A3.pdf, (Latex files - A3.tex) Derivation of equations for spring-mass system: derivation Solution and matlab script (TBA)  "},{"id":10,"href":"/COE-311K-website/docs/lectures/lecture3/","title":"Lecture3","section":"Lectures","content":"Lecture 3 #  Introduction to Matlab programming environment (with in-class demo).\nLinks #   Lecture notes  "},{"id":11,"href":"/COE-311K-website/docs/lectures/lecture4/","title":"Lecture4","section":"Lectures","content":"Lecture 4 #  Matlab basics.\nLinks #   Lecture notes  "},{"id":12,"href":"/COE-311K-website/docs/lectures/lecture5/","title":"Lecture5","section":"Lectures","content":"Lecture 5 #   Script files in Matlab Discretization of first order ordinary differential equation.  Links #   Lecture notes  "},{"id":13,"href":"/COE-311K-website/docs/lectures/lecture6/","title":"Lecture6","section":"Lectures","content":"Lecture 6 #  Sources of errors in numerical methods.\nLinks #   Lecture notes  "},{"id":14,"href":"/COE-311K-website/docs/projects/","title":"Projects","section":"Docs","content":"We will have two projects and one final project in this course. Typically, the projects will be completed by a group of 4-5 students. Each student will prepare independent project report and the grading will be student-specific.\nProjects #   Project 1 Project 2  "},{"id":15,"href":"/COE-311K-website/docs/lectures/lecture7-8/","title":"Lecture7 8","section":"Lectures","content":"Lecture 7 - 8 #   Basics of function Methods to solve roots problem Graphical method Bracketing method - Incremental search method, Bisection method, False-position method  Links #   Lecture notes  "},{"id":16,"href":"/COE-311K-website/docs/lectures/lecture9/","title":"Lecture9","section":"Lectures","content":"Lecture 9 #   Open methods to solve roots problem Fixed-point iteration method Error in fixed-point iteration method Newton-Raphson method  Links #   Lecture notes  "},{"id":17,"href":"/COE-311K-website/docs/lectures/lecture10/","title":"Lecture10","section":"Lectures","content":"Lecture 10 #   Recap of open methods In-class demo of Newton Raphson method and extension of Newton Raphson method (so called Secant\u0026rsquo;s method) Optimization problem and relation to the roots problem Golden-Section method for optimization problem  Links #   Lecture notes  "},{"id":18,"href":"/COE-311K-website/docs/lectures/lecture11/","title":"Lecture11","section":"Lectures","content":"Lecture 11 #   Linear system of equations Introduction to linear algebra Matrix notation  Links #   Lecture notes  "},{"id":19,"href":"/COE-311K-website/docs/lectures/lecture12/","title":"Lecture12","section":"Lectures","content":"Lecture 12 #   Algebraic operations on matrices Solving $Ax = b$ problem Direct method for $Ax = b$ problem Graphical method  Links #   Lecture notes  "},{"id":20,"href":"/COE-311K-website/docs/assignments/","title":"Assignments","section":"Docs","content":"We will have total 6 assignments in this course. For final grading, we will consider best 4 out of 6 assignments.\nAssignments #   Assignment 1 Assignment 2 Assignment 3   Assignments 4,5,6 TBA\n "},{"id":21,"href":"/COE-311K-website/docs/lectures/lecture13/","title":"Lecture13","section":"Lectures","content":"Lecture 13 #   Rolle\u0026rsquo;s theorem Mean-value theorem Taylor\u0026rsquo;s theorem Roots problem - Error in fixed-point iteration method and Newton-Raphson method Norm of vector and matrix Condition number of a matrix and error in $Ax = b$ problem  Links #   Lecture notes  "},{"id":22,"href":"/COE-311K-website/docs/lectures/lecture14/","title":"Lecture14","section":"Lectures","content":"Lecture 14 #   Solving $Ax = b$ problem Cramer\u0026rsquo;s rule Gauss elimination method  Links #   Lecture notes  "},{"id":23,"href":"/COE-311K-website/docs/lectures/lecture15/","title":"Lecture15","section":"Lectures","content":"Lecture 15 #   Gauss elimination method In-class demo  Links #   Lecture notes  "},{"id":24,"href":"/COE-311K-website/docs/lectures/lecture16/","title":"Lecture16","section":"Lectures","content":"Lecture 16 #   More on Gauss elimination method (pivots) In-class demo Different types of matrices  Links #   Lecture notes  "},{"id":25,"href":"/COE-311K-website/docs/lectures/lecture17/","title":"Lecture17","section":"Lectures","content":"Lecture 17 #   Different types of matrices LU factorization of a matrix Gauss elimination to get LU factorization Solving $Ax = b$ using LU factorization  Links #   Lecture notes  "},{"id":26,"href":"/COE-311K-website/docs/lectures/","title":"Lectures","section":"Docs","content":"Lectures #  Lectures will be face-to-face. The notes and slides will be available in this github repository and Canvas course page.\nOn the right-side of website, you can find the list of lectures. The list will be updated as we move further in the course.\nLecture list #   Lecture 1 Lecture 2 Lecture 3 Lecture 4 Lecture 5 Lecture 6 Lecture 7-8 Lecture 9 Lecture 10 Lecture 11 Lecture 12 Lecture 13 Lecture 14 Lecture 15 Lecture 16 Lecture 17 Lecture 18 Lecture 19 Lecture 20-21 Lecture 22 Lecture 23 Lecture 24 Lecture 25 Lecture 26  "},{"id":27,"href":"/COE-311K-website/docs/lectures/lecture18/","title":"Lecture18","section":"Lectures","content":"Lecture 18 #   Iterative methods for $Ax = b$ problem Jacobi and Gauss-Seidel methods Relaxation methods System of nonlinear equations Taylor\u0026rsquo;s series to solve system of nonlinear equations  Links #   Lecture notes  "},{"id":28,"href":"/COE-311K-website/docs/lectures/lecture19/","title":"Lecture19","section":"Lectures","content":"Lecture 19 #   Review of Taylor\u0026rsquo;s series to solve system of nonlinear equations Eigenvalues and eigenvectors  Links #   Lecture notes  "},{"id":29,"href":"/COE-311K-website/docs/lectures/lecture20-21/","title":"Lecture20 21","section":"Lectures","content":"Lecture 20 - 21 #   Spring-mass system and derivation of equation of motion Eigenvalues and Eigenvectors to solve the spring-mass system of linear equations governed by second-order ordinary differential equations Concept of incomplete/characteristic solution and complete solution  Links #   Lecture notes  Detailed notes on Eigenvalue and Eigenvectors #   Definition of the Eigenvalue problem Intuition Utility of Eigenvalue and Eigenvector How to solve Eigenvalue-Eigenvector problem Application of Eigenvalue problem - System of 1st order ODEs Application of Eigenvalue problem - System of 2nd order ODEs  Links #   Detailed notes on Eigenvalue problem  "},{"id":30,"href":"/COE-311K-website/docs/lectures/lecture22/","title":"Lecture22","section":"Lectures","content":"Lecture 22 #   Review of topics covered so far and in-class discussion  Links #   Lecture notes  "},{"id":31,"href":"/COE-311K-website/docs/lectures/lecture23/","title":"Lecture23","section":"Lectures","content":"Lecture 23 #   Introduction to curve-fitting and interpolation  Links #   Lecture notes  "},{"id":32,"href":"/COE-311K-website/docs/lectures/lecture24/","title":"Lecture24","section":"Lectures","content":"Lecture 24 #   Introduction to data and preliminary statistics  Links #   Lecture notes  "},{"id":33,"href":"/COE-311K-website/docs/lectures/lecture25/","title":"Lecture25","section":"Lectures","content":"Lecture 25 #   Linear regression Least squares method  Links #   Lecture notes  "},{"id":34,"href":"/COE-311K-website/docs/lectures/lecture26/","title":"Lecture26","section":"Lectures","content":"Lecture 26 #   Solving least-square linear regression problem General idea of basis vector in general linear regression problem Types of basis vector (polynomial, Fourier, etc.) Deriving $Ax = b$ problem from least square method for general linear regression curve-fitting Linear regression with multiple input variables Nonlinear regression introduction  Links #   Lecture notes  "}]